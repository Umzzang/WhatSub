# Generated by Django 3.2.12 on 2022-09-30 06:26

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Branch',
            fields=[
                ('branch_id', models.AutoField(primary_key=True, serialize=False)),
                ('branch_name', models.CharField(blank=True, max_length=255, null=True)),
                ('contact_no', models.CharField(blank=True, max_length=255, null=True)),
                ('lat', models.FloatField()),
                ('lng', models.FloatField()),
                ('street_address', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'branch',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Collection',
            fields=[
                ('collection_id', models.AutoField(primary_key=True, serialize=False)),
                ('menu_name', models.CharField(blank=True, max_length=255, null=True)),
                ('rank_date', models.DateTimeField(blank=True, null=True)),
                ('ranking', models.IntegerField()),
            ],
            options={
                'db_table': 'collection',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Combination',
            fields=[
                ('combination_id', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('allergies', models.CharField(blank=True, max_length=255, null=True)),
                ('bland', models.IntegerField()),
                ('chewy', models.IntegerField()),
                ('fat', models.FloatField()),
                ('kcal', models.FloatField()),
                ('nutty', models.IntegerField()),
                ('price', models.IntegerField()),
                ('protein', models.FloatField()),
                ('salty', models.IntegerField()),
                ('sodium', models.FloatField()),
                ('soft', models.IntegerField()),
                ('sour', models.IntegerField()),
                ('spicy', models.IntegerField()),
                ('sugar', models.FloatField()),
                ('sweet', models.IntegerField()),
            ],
            options={
                'db_table': 'combination',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CombinationPost',
            fields=[
                ('combination_post_id', models.AutoField(primary_key=True, serialize=False)),
                ('comb_name', models.CharField(blank=True, max_length=255, null=True)),
                ('content', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('likes_cnt', models.IntegerField()),
                ('statistics', models.JSONField(blank=True, null=True)),
                ('img_url', models.CharField(blank=True, max_length=255, null=True)),
                ('score_avg', models.FloatField()),
            ],
            options={
                'db_table': 'combination_post',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Dib',
            fields=[
                ('dib_id', models.IntegerField(primary_key=True, serialize=False)),
                ('combination_post_id', models.IntegerField()),
                ('state', models.TextField()),
            ],
            options={
                'db_table': 'dib',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Excluded',
            fields=[
                ('excluded_id', models.IntegerField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'excluded',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='HibernateSequence',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('next_val', models.BigIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'hibernate_sequence',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Ingredient',
            fields=[
                ('ingredient_id', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('allergies', models.CharField(blank=True, max_length=255, null=True)),
                ('bland', models.IntegerField()),
                ('category', models.CharField(max_length=255)),
                ('chewy', models.IntegerField()),
                ('fat', models.FloatField(blank=True, null=True)),
                ('img_url', models.CharField(max_length=255)),
                ('kcal', models.FloatField(blank=True, null=True)),
                ('name', models.CharField(max_length=255)),
                ('nutty', models.IntegerField()),
                ('price', models.IntegerField()),
                ('protein', models.FloatField(blank=True, null=True)),
                ('salty', models.IntegerField()),
                ('sodium', models.FloatField(blank=True, null=True)),
                ('soft', models.IntegerField()),
                ('sour', models.IntegerField()),
                ('spicy', models.IntegerField()),
                ('sugar', models.FloatField(blank=True, null=True)),
                ('sweet', models.IntegerField()),
            ],
            options={
                'db_table': 'ingredient',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Menu',
            fields=[
                ('menu_id', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('allergies', models.CharField(blank=True, max_length=255, null=True)),
                ('bland', models.IntegerField()),
                ('chewy', models.IntegerField()),
                ('fat', models.FloatField()),
                ('img_url', models.CharField(max_length=255)),
                ('ingredients', models.CharField(max_length=255)),
                ('kcal', models.FloatField()),
                ('menu_desc', models.CharField(max_length=255)),
                ('menu_name', models.CharField(max_length=255)),
                ('nutty', models.IntegerField()),
                ('price', models.IntegerField()),
                ('protein', models.FloatField()),
                ('salty', models.IntegerField()),
                ('sodium', models.FloatField()),
                ('soft', models.IntegerField()),
                ('sour', models.IntegerField()),
                ('spicy', models.IntegerField()),
                ('sugar', models.FloatField()),
                ('sweet', models.IntegerField()),
            ],
            options={
                'db_table': 'menu',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OrderHistory',
            fields=[
                ('order_history_id', models.AutoField(primary_key=True, serialize=False)),
                ('count', models.IntegerField()),
                ('birth_year', models.IntegerField()),
                ('gender', models.CharField(blank=True, max_length=255, null=True)),
                ('subti', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'order_history',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Orders',
            fields=[
                ('order_id', models.AutoField(primary_key=True, serialize=False)),
                ('order_price', models.IntegerField()),
                ('ordered_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'orders',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('review_id', models.AutoField(primary_key=True, serialize=False)),
                ('content', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('score', models.IntegerField()),
            ],
            options={
                'db_table': 'review',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TodaySurvey',
            fields=[
                ('today_survey_id', models.AutoField(primary_key=True, serialize=False)),
                ('response', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'today_survey',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('user_id', models.AutoField(primary_key=True, serialize=False)),
                ('auth_id', models.CharField(blank=True, max_length=255, null=True)),
                ('birth_year', models.IntegerField()),
                ('email', models.CharField(blank=True, max_length=255, null=True)),
                ('gender', models.CharField(blank=True, max_length=255, null=True)),
                ('is_diet', models.TextField()),
                ('profile_img', models.CharField(blank=True, max_length=255, null=True)),
                ('refresh_token', models.CharField(blank=True, max_length=255, null=True)),
                ('subti', models.CharField(blank=True, max_length=255, null=True)),
                ('user_name', models.CharField(blank=True, max_length=255, null=True, unique=True)),
            ],
            options={
                'db_table': 'user',
                'managed': False,
            },
        ),
    ]
